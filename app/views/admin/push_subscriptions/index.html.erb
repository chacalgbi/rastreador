<%= render "page_header" do %>
  <%= render "page_header_breadcrumb", title: "Push subscriptions" do %>
    <li class="breadcrumb-item"><%= link_to "Admin", admin_path %></li>
  <% end %>

  <%= render "page_header_actions" do %>
    <%= link_to "Filtros", "#offcanvas_filters", "data-bs-toggle": "offcanvas", class: "btn btn-white" %>
    <%= link_to "Novo push subscription", new_admin_push_subscription_path, class: "btn btn-primary" %>
  <% end %>
<% end %>

<div class="page-body">
  <div class="container-fluid">
    <div class="card">
      <div class="table-responsive">
        <table class="table table-vcenter table-nowrap card-table table-striped">
          <thead>
            <tr>
              <th>Enviar</th>
              <th class="w-1"></th>
              <th><%= sort_link @search, :user_id, "Usu√°rio" %></th>
              <th><%= sort_link @search, :info, "Dispositivo" %></th>
              <th><%= sort_link @search, :subscribed %></th>
              <th><%= sort_link @search, :endpoint %></th>
              <th><%= sort_link @search, :created_at %></th>
              <th><%= sort_link @search, :updated_at %></th>
            </tr>
          </thead>
          <tbody>
            <% @push_subscriptions.each do |push_subscription| %>
              <tr>
                <td>
                  <button type="button" 
                          class="btn btn-info btn-sm" 
                          data-bs-toggle="modal" 
                          data-bs-target="#sendNotificationModal"
                          data-subscription-id="<%= push_subscription.id %>"
                          data-user-name="<%= push_subscription&.user&.name %>"
                          title="Enviar notifica√ß√£o personalizada">
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-bell-plus" width="16" height="16" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                      <path stroke="none" d="m0 0h24v24H0z" fill="none"/>
                      <path d="M12.5 17h-8.5a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6v2"/>
                      <path d="M9 17v1a3 3 0 0 0 3 3c.408 0 .792 -.081 1.146 -.23"/>
                      <path d="M16 19h6"/>
                      <path d="M19 16v6"/>
                    </svg>
                  </button>
                </td>
                <td>
                  <%= link_to "View", [:admin, push_subscription], class: "btn btn-white btn-sm" %>
                  <%= link_to "Delete", [:admin, push_subscription], class: "btn btn-white btn-sm", data: { method: :delete, confirm: "Are you sure?" } %>
                </td>
                <td>
                  <%= push_subscription.user_id %> - <%= push_subscription&.user&.name %>
                </td>
                <td>
                  <% if push_subscription.info.present? %>
                    <% begin %>
                      <% device_info = JSON.parse(push_subscription.info) %>
                      <small>
                        <strong><%= device_info['browser'] %></strong> - <%= device_info['device_type'] %> - <%= device_info['operating_system'] %><br>
                        <%= device_info['language'] %> - <%= device_info['screen_resolution'] %>
                      </small>
                    <% rescue JSON::ParserError %>
                      <%= truncate(push_subscription.info, length: 50) %>
                    <% end %>
                  <% else %>
                    <em>-</em>
                  <% end %>
                </td>
                <td><%= push_subscription.subscribed ? "‚úì" : "‚úó" %></td>
                <td><%= truncate(push_subscription.endpoint, length: 50) %></td>
                <td><%= push_subscription.created_at.strftime("%d/%m/%Y %H:%M") %></td>
                <td><%= push_subscription.updated_at.strftime("%d/%m/%Y %H:%M") %></td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
      <div class="card-footer d-flex align-items-center fs-5">
        <div class="d-none d-md-block">
          <div>Download: <%= link_to "CSV", url_for(format: :csv, q: request.params[:q]) %></div>
          <%== pagy_info(@pagy) %>
        </div>
        <div class="ms-auto">
          <%== pagy_bootstrap_nav(@pagy) %>
        </div>
      </div>
    </div>
  </div>
</div>

<div id="offcanvas_filters" tabindex="-1" class="offcanvas offcanvas-end">
  <div class="offcanvas-header">
    <h2 class="offcanvas-title">Filters</h2>
    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"></button>
  </div>
  <%= search_form_for [:admin, @search], class: "offcanvas-body" do |f| %>
    <%# f.label :name_cont, class: "form-label" %>
    <%# f.text_field :name_cont, class: "form-control mb-3" %>

    <%= f.submit "Filter", class: "btn btn-primary" %>
    <%= link_to "Clear Filter", admin_push_subscriptions_path, class: "btn btn-white" %>
  <% end %>
</div>

<!-- Modal para envio de notifica√ß√£o personalizada -->
<div class="modal fade" id="sendNotificationModal" tabindex="-1" aria-labelledby="sendNotificationModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="sendNotificationModalLabel">
          <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-bell-plus me-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
            <path stroke="none" d="m0 0h24v24H0z" fill="none"/>
            <path d="M12.5 17h-8.5a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6v2"/>
            <path d="M9 17v1a3 3 0 0 0 3 3c.408 0 .792 -.081 1.146 -.23"/>
            <path d="M16 19h6"/>
            <path d="M19 16v6"/>
          </svg>
          Enviar Notifica√ß√£o Personalizada
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <%= form_with url: "", method: :post, local: true, id: "sendCustomNotificationForm", class: "needs-validation" do |form| %>
        <div class="modal-body" style="overflow-x: hidden;">
          <div class="mb-3">
            <label class="form-label">Destinat√°rio:</label>
            <div id="userInfo" class="alert alert-info"></div>
          </div>

          <div class="mb-3">
            <label for="title" class="form-label">T√≠tulo da Notifica√ß√£o <span class="text-danger">*</span></label>
            <%= form.text_field :title, value: "T√≠tulo da Notifica√ß√£o", class: "form-control", placeholder: "Digite o t√≠tulo da notifica√ß√£o...", required: true, maxlength: 50 %>
            <div class="form-text">M√°ximo de 50 caracteres</div>
          </div>

          <div class="mb-3">
            <label for="icon" class="form-label">√çcone <span class="text-danger">*</span></label>
            <%= form.select :icon, 
                options_for_select([
                  ['üìù Nota', 'note'],
                  ['‚ÑπÔ∏è Informa√ß√£o', 'info'],
                  ['‚ö†Ô∏è Aten√ß√£o', 'warning'],
                  ['‚ùå Perigo', 'danger'],
                  ['‚úÖ Sucesso', 'success'],
                  ['üìã Padr√£o', 'default']
                ], 'note'), 
                {}, 
                { class: "form-select", required: true } %>
          </div>

          <div class="mb-3">
            <label for="body" class="form-label">Mensagem <span class="text-danger">*</span></label>
            <%= form.text_area :body, value: "Um teste de notifica√ß√£o do sistema de rastreamento", class: "form-control", rows: 4, placeholder: "Digite a mensagem da notifica√ß√£o...", required: true, maxlength: 200 %>
            <div class="form-text">M√°ximo de 200 caracteres</div>
          </div>

          <div class="alert alert-warning">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-info-circle me-2" width="20" height="20" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="m0 0h24v24H0z" fill="none"/>
              <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0"/>
              <path d="M12 9h.01"/>
              <path d="M11 12h1v4h1"/>
            </svg>
            <strong>Aten√ß√£o:</strong> Esta notifica√ß√£o ser√° enviada instantaneamente para o usu√°rio selecionado.
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-x me-1" width="16" height="16" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="m0 0h24v24H0z" fill="none"/>
              <path d="M18 6l-12 12"/>
              <path d="M6 6l12 12"/>
            </svg>
            Cancelar
          </button>
          <button type="submit" class="btn btn-primary">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-send me-1" width="16" height="16" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="m0 0h24v24H0z" fill="none"/>
              <path d="m10 14l11 -11"/>
              <path d="m21 3l-6.5 18a.55 .55 0 0 1 -1 0l-3.5 -7l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5"/>
            </svg>
            Enviar Notifica√ß√£o
          </button>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
  function initializeNotificationModal() {
    const sendNotificationModal = document.getElementById('sendNotificationModal');
    const sendCustomNotificationForm = document.getElementById('sendCustomNotificationForm');
    const userInfo = document.getElementById('userInfo');
    
    if (!sendNotificationModal || !sendCustomNotificationForm || !userInfo) {
      return;
    }

    window.currentNotificationData = null;

    document.body.removeEventListener('click', handleNotificationButtonClick);
    document.body.addEventListener('click', handleNotificationButtonClick);

    sendNotificationModal.removeEventListener('show.bs.modal', handleModalShow);
    sendNotificationModal.removeEventListener('hidden.bs.modal', handleModalHidden);
    
    sendNotificationModal.addEventListener('show.bs.modal', handleModalShow);
    sendNotificationModal.addEventListener('hidden.bs.modal', handleModalHidden);

    setupCharacterCounters();
  }

  function handleNotificationButtonClick(event) {
    const button = event.target.closest('[data-bs-target="#sendNotificationModal"]');
    if (button) {
      const subscriptionId = button.getAttribute('data-subscription-id');
      const userName = button.getAttribute('data-user-name');

      window.currentNotificationData = {
        subscriptionId: subscriptionId,
        userName: userName
      };
    }
  }

  function handleModalShow(event) {
    const sendCustomNotificationForm = document.getElementById('sendCustomNotificationForm');
    const userInfo = document.getElementById('userInfo');

    if (window.currentNotificationData && window.currentNotificationData.subscriptionId) {
      const { subscriptionId, userName } = window.currentNotificationData;

      if (sendCustomNotificationForm) {
        sendCustomNotificationForm.action = `/admin/push_subscriptions/${subscriptionId}/send_notification`;
      }

      if (userInfo) {
        userInfo.innerHTML = `<strong>Enviando para:</strong> ${userName || 'Usu√°rio sem nome'} <br><strong>Subscription ID:</strong> ${subscriptionId}`;
      }
    } else {
      const button = event.relatedTarget;
      if (button) {
        const subscriptionId = button.getAttribute('data-subscription-id');
        const userName = button.getAttribute('data-user-name');

        if (subscriptionId && sendCustomNotificationForm) {
          sendCustomNotificationForm.action = `/admin/push_subscriptions/${subscriptionId}/send_notification`;
        }

        if (userInfo) {
          userInfo.innerHTML = `<strong>Enviando para:</strong> ${userName || 'Usu√°rio sem nome'} <br><strong>Subscription ID:</strong> ${subscriptionId}`;
        }
      }
    }
  }

  function handleModalHidden(event) {
    const sendCustomNotificationForm = document.getElementById('sendCustomNotificationForm');

    if (sendCustomNotificationForm) {
      const titleField = sendCustomNotificationForm.querySelector('input[name="title"]');
      const iconField = sendCustomNotificationForm.querySelector('select[name="icon"]');
      const bodyField = sendCustomNotificationForm.querySelector('textarea[name="body"]');

      if (titleField) titleField.value = "T√≠tulo da Notifica√ß√£o";
      if (iconField) iconField.value = "note";
      if (bodyField) bodyField.value = "Um teste de notifica√ß√£o do sistema de rastreamento";
    }
  }

  function setupCharacterCounters() {
    const sendCustomNotificationForm = document.getElementById('sendCustomNotificationForm');
    if (!sendCustomNotificationForm) return;

    const titleField = sendCustomNotificationForm.querySelector('input[name="title"]');
    const bodyField = sendCustomNotificationForm.querySelector('textarea[name="body"]');

    if (titleField) {
      titleField.removeEventListener('input', handleTitleInput);
      titleField.addEventListener('input', handleTitleInput);
    }

    if (bodyField) {
      bodyField.removeEventListener('input', handleBodyInput);
      bodyField.addEventListener('input', handleBodyInput);
    }
  }

  function handleTitleInput(event) {
    const remaining = 50 - event.target.value.length;
    const helpText = event.target.parentNode.querySelector('.form-text');
    if (helpText) {
      helpText.textContent = `${remaining} caracteres restantes`;
      helpText.className = remaining < 10 ? 'form-text text-warning' : 'form-text';
    }
  }

  function handleBodyInput(event) {
    const remaining = 200 - event.target.value.length;
    const helpText = event.target.parentNode.querySelector('.form-text');
    if (helpText) {
      helpText.textContent = `${remaining} caracteres restantes`;
      helpText.className = remaining < 20 ? 'form-text text-warning' : 'form-text';
    }
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeNotificationModal);
  } else {
    initializeNotificationModal();
  }

  document.addEventListener('turbo:load', initializeNotificationModal);
  document.addEventListener('turbolinks:load', initializeNotificationModal);
</script>
