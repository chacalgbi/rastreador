<%= render "page_header" do %>
  <%= render "page_header_breadcrumb", title: @filename do %>
    <li class="breadcrumb-item"><%= link_to "Admin", admin_path %></li>
  <% end %>
<% end %>

<div class="page-body">
  <div class="container-xl">
    <h1>Log: <%= @filename %></h1>
    <h2>Diretório: <%= @directory_name.capitalize %></h2>

    <div style="margin-bottom: 1rem; display: flex; align-items: center; gap: 1rem;">
      <%= link_to "Voltar para #{@directory_name.capitalize}", directory_admin_logs_path(@directory_name) %>
      <%= button_to "Limpar este Log", 
                    clear_log_file_admin_logs_path(directory: @directory_name, filename: @filename),
                    method: :delete,
                    form: { data: { turbo_confirm: "ATENÇÃO!\n\nVocê tem certeza que deseja limpar TODO o conteúdo deste arquivo de log (#{@filename})?\n\nEsta ação NÃO pode ser desfeita." } },
                    class: "btn btn-danger btn-sm" %>
    </div>

    <%= form_with(url: log_file_admin_logs_path(directory: @directory_name, filename: @filename), method: :get, local: true) do |form| %>
      <div style="margin-bottom: 1rem; display: flex; align-items: center; gap: 0.5rem;">
        <%= form.label :search, "Pesquisar no arquivo todo:", style: "margin-right: 0.5rem;" %>
        <%= form.text_field :search, value: @search_term, placeholder: "Digite o termo..." %>
        <%= form.submit "Pesquisar" %>
        <% if @search_term.present? %>
          <%= link_to "Limpar Busca", log_file_admin_logs_path(directory: @directory_name, filename: @filename) %>
        <% end %>
      </div>
    <% end %>

    <% if @is_search_result %>
      <p>Resultados da busca por "<strong><%= @search_term %></strong>":</p>
    <% else %>
      <p>Exibindo as últimas <%= Admin::LogsController::LINES_TO_SHOW %> linhas:</p>
    <% end %>
    <pre id="log-content" style="background-color:rgb(56, 56, 57); border: 1px solid #dee2e6; padding: 1rem; white-space: pre-wrap; word-wrap: break-word; font-size: 1rem; color: #fff;">
      <%= @log_content %>
    </pre>

    <style>
      .log-timestamp {
        background-color: rgba(17, 116, 223, 0.42) !important;
        padding: 2px 4px;
        border-radius: 3px;
        font-weight: bold;
      }
      .log-parametros {
        background-color: rgba(255, 193, 7, 0.5) !important;
        padding: 2px 4px;
        border-radius: 3px;
        font-weight: bold;
        color: #000000ff !important;
      }
      .log-padronizado {
        background-color: rgba(40, 167, 69, 0.5) !important;
        padding: 2px 4px;
        border-radius: 3px;
        font-weight: bold;
        color: #000000ff !important;
      }
      .log-alerta {
        background-color: rgba(220, 53, 69, 0.5) !important;
        padding: 2px 4px;
        border-radius: 3px;
        font-weight: bold;
        color: #000000ff !important;
      }
    </style>

    <script>
      function highlightLogContent() {
        const logContent = document.getElementById('log-content');
        if (logContent && !logContent.dataset.highlighted) {
          let content = logContent.innerHTML;
          
          // Destaque do timestamp
          const timestampPattern = /(I, \[\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+ #\d+\])/g;
          content = content.replace(timestampPattern, '<span class="log-timestamp">$1</span>');
          
          // Destaque das palavras específicas
          content = content.replace(/(PARAMETROS:\s*)/g, '<span class="log-parametros">$1</span>');
          content = content.replace(/(PADRONIZADO:\s*)/g, '<span class="log-padronizado">$1</span>');
          content = content.replace(/(ALERTA:\s*)/g, '<span class="log-alerta">$1</span>');
          
          logContent.innerHTML = content;
          logContent.dataset.highlighted = 'true';
        }
      }
      document.addEventListener('turbo:load', highlightLogContent);
      document.addEventListener('turbo:render', highlightLogContent);
      document.addEventListener('DOMContentLoaded', highlightLogContent);
    </script>
  </div>
</div>

